[metadata]
name = neuralflow
version = 1.0.0
author = NeuralFlow Team
author_email = team@neuralflow.ai
description = A flexible and easy-to-use neural network library
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/neuralflow/neuralflow
project_urls =
    Bug Tracker = https://github.com/neuralflow/neuralflow/issues
    Documentation = https://neuralflow.readthedocs.io
    Source Code = https://github.com/neuralflow/neuralflow
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Education
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering :: Artificial Intelligence

[options]
packages = find:
python_requires = >=3.7
install_requires =
    numpy>=1.19.0
    scipy>=1.5.0
    matplotlib>=3.3.0
    tqdm>=4.60.0
    scikit-learn>=0.24.0

[options.packages.find]
exclude =
    tests*
    docs*

[options.extras_require]
dev =
    pytest>=6.0.0
    pytest-cov>=2.0.0
    black>=21.0.0
    flake8>=3.9.0
    mypy>=0.900
    sphinx>=4.0.0
    sphinx-rtd-theme>=0.5.0
notebooks =
    jupyter>=1.0.0
    jupytext>=1.11.0
    nbconvert>=6.0.0
visualization =
    seaborn>=0.11.0
    plotly>=5.0.0
all =
    %(dev)s
    %(notebooks)s
    %(visualization)s

[options.entry_points]
console_scripts =
    neuralflow-demo = neuralflow.demos.image_classification_demo:main

[bdist_wheel]
universal = 1

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = .git,__pycache__,docs/source/conf.py,old,build,dist

[mypy]
python_version = 3.7
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --cov=neuralflow --cov-report=html --cov-report=term

[coverage:run]
source = neuralflow
omit =
    */tests/*
    */test_*
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING: